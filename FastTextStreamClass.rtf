{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright 
\fs20\cgrid \snext0 Normal;}{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\i\f1\cgrid \sbasedon0 \snext0 heading 2;}{
\s3\sb240\sa60\keepn\widctlpar\adjustright \f1\cgrid \sbasedon0 \snext0 heading 3;}{\s4\keepn\widctlpar\outlinelevel3\adjustright \b\f2\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \f1\fs16 
\sbasedon10 small;}{\s16\li720\widctlpar\adjustright \fs20\cgrid \sbasedon0 \snext16 Body Text 2;}}{\info{\title FastTextStream Class}{\author Jonathan Orgel}{\operator Jonathan Orgel}{\creatim\yr1999\mo1\dy10\hr11\min40}
{\revtim\yr1999\mo1\dy10\hr11\min40}{\version3}{\edmins1}{\nofpages1}{\nofwords0}{\nofchars0}{\*\company Kalonymous, Inc.}{\nofcharsws0}{\vern113}}\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale204\viewzk2\pgbrdrhead\pgbrdrfoot \fet0
\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {
FastTextStream Class
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {By Jonathan Orgel, Kalonymous, Inc. (v0.1, January 10, 1999)
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\outlinelevel1\adjustright \b\i\f1\cgrid {Introduction
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {The new Vi
sual Basic 6 TextStream class reads and skips files significantly slower then the old get and seek statements. The FastTextStream class implements a 30% faster readline and skip methods using underlying get and seek statements.
\par }\pard\plain \s2\sb240\sa60\keepn\widctlpar\outlinelevel1\adjustright \b\i\f1\cgrid {Functions
\par }\pard\plain \s4\keepn\widctlpar\outlinelevel3\adjustright \b\f2\fs20\cgrid {Public Function OpenTextFileForReading(Path As String) As Boolean
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {\f2 
\par }\pard\plain \s16\li720\widctlpar\adjustright \fs20\cgrid {Open a text file using the open statement. The function will return true if the file was opened and false if an error occurred.
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s4\keepn\widctlpar\outlinelevel3\adjustright \b\f2\fs20\cgrid {Public Function ReadLine() As Variant
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {\f2 
\par }\pard \li720\widctlpar\adjustright {Read the next line until the first LF. The LF is not included in the returned string.
\par If a CR_LF is found the CR is not returned either.
\par On end of file ReadLine will return the \ldblquote Empty\rdblquote  value. Check with the isEmpty function.
\par Do }{\ul not}{ use the test below. The expression will be true for empty strings (}{\f2 \ldblquote \rdblquote }{) as well!
\par }{\f2 If ReadLine = Empty then \lquote do some action
\par }\pard \widctlpar\adjustright {
\par }{\b\f2 Public Sub Skip(Optional NumberOfBytes As Long = 1, _
\par     Optional StartingPoint As Integer = SkipFromStart)
\par     Dim NewPosition As Long
\par }{\f2 
\par Const SkipFromStart = 0
\par Const SkipFromCurrent = 1
\par Const SkipFromEnd = 2
\par }{
\par }\pard\plain \s16\li720\widctlpar\adjustright \fs20\cgrid {Skip or go back a number of bytes. If the request would take you before the beginning of the file or beyond the end of the file the request is ignored.
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {
\par 
\par }\pard\plain \s4\keepn\widctlpar\outlinelevel3\adjustright \b\f2\fs20\cgrid {Public Property Get Path() As String
\par }\pard\plain \s16\li720\widctlpar\adjustright \fs20\cgrid {Path will return you the path of the opened file.
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s4\keepn\widctlpar\outlinelevel3\adjustright \b\f2\fs20\cgrid {Public Property Get AtEndOfFile() As Boolean
\par }\pard\plain \s16\li720\widctlpar\adjustright \fs20\cgrid {True if there are no more bytes to read beyond the current point in the file. It is false otherwise.
\par }\pard\plain \widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s4\keepn\widctlpar\outlinelevel3\adjustright \b\f2\fs20\cgrid {Public Property Get Size() As Long
\par }\pard\plain \li720\widctlpar\adjustright \fs20\cgrid {The size of the file at time of opening the file.
\par }\pard \widctlpar\adjustright {
\par }\pard\plain \s4\keepn\widctlpar\outlinelevel3\adjustright \b\f2\fs20\cgrid {Public Property Get CurrentPosition() As Long
\par }\pard\plain \li720\widctlpar\adjustright \fs20\cgrid {The current byte offset in the file
\par }}